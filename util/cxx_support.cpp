/*
 *  cxx_support.cpp
 *  Embedded
 *
 *  Created by Serge on 26/4/09.
 *  Copyright 2009 Zorobo. All rights reserved.
 *
 */


#if defined(__EMBEDDED__)
/*
 * This horror is just here to satisfy code generated by g++.
 * This is a function that gets called when an entry in the vtable of a class
 * if not set.
 * This should never happen so let's make it real short
 */
extern "C"
void __cxa_pure_virtual() {
  // Nothing
}

/**
 * More horrors to please gcc
 */
//extern "C"
void * __dso_handle = &__dso_handle;

extern "C"
int __cxa_atexit(void (*destructor)(void*), void* param, void* home_dso) {
  return 0;
}


/* The ABI requires a 64-bit type.  */
__extension__ typedef int __guard __attribute__((mode (__DI__)));

/**
 * Support for class instance with static linkage
 * See http://wiki.osdev.org/C_PlusPlus
 */
extern "C"
int __cxa_guard_acquire (__guard *g) {
  return !*(char *)(g);
}

extern "C"
void __cxa_guard_release (__guard *g) {
  *(char *)g = 1;
}

extern "C"
void __cxa_guard_abort (__guard *) {
}

/*
 * Another horror, to satisfy g++. Called when an exception is thrown
 * from a function that should not throw it as per its signature.
 */
//void __cxa_call_unexpected() {
//	
//}

/*
 * Now to please the ARM EABI:
 */
extern "C"
int __aeabi_atexit (void *object, void (*destructor) (void *), void *dso_handle) throw () {
  return __cxa_atexit(destructor, object, dso_handle); 
}

#endif
